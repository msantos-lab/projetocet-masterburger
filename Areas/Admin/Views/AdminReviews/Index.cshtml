@model ReflectionIT.Mvc.Paging.PagingList<MasterBurger.Models.ProdutoReview>

@{
	ViewData["Title"] = "Avaliações";
}


<div class="card card-body my-3">
	<div class="d-flex justify-content-end px-4">
		<form asp-action="Index" method="get">
			<label for="filter">Filtrar por Status:</label>
			<select name="filter" id="filter">
				<option value="">Todos</option>
				<option value="Nova" selected="@((string)ViewData["CurrentFilter"] == "Nova")">Nova</option>
				<option value="Aprovada" selected="@((string)ViewData["CurrentFilter"] == "Aprovada")">Aprovada</option>
				<option value="Reprovada" selected="@((string)ViewData["CurrentFilter"] == "Reprovada")">Reprovada</option>
			</select>
			<button class="btn btn-secondary py-2" type="submit">Filtrar</button>
		</form>
	</div>
</div>

<div class="card">
	<div class="d-md-flex justify-content-between mb-3">
		<div class="mb-3 mb-md-0 title-pg">
			<h2>@ViewData["Title"]</h2>
		</div>
	</div>

	<div class="table-responsive">
		<table class="table">
			<thead class="table-light py-1">
				<tr>
					<th>Produto</th>
					<th>
						Nome do Cliente
					</th>
					<th>
						Avaliação
					</th>
					<th>
						Data da Criação
					</th>
					<th>
						Status
					</th>
					<th>Cliente notificado?</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model) {
					<tr>
						<td>
							<a href="https://localhost:7178/Produto/Details?ProdutoId=@Html.DisplayFor(modelItem => item.Produto.ProdutoId)" target="_blank">
								<img src="data:image/jpeg;base64, @Convert.ToBase64String(item.Produto.ImagemBase64)" width="90">@Html.DisplayFor(modelItem => item.Produto.Nome)
							</a>
						</td>
						<td>
							<p>@Html.DisplayFor(modelItem => item.ClienteNome)</p>
						</td>
						<td>
							<p>@Html.DisplayFor(modelItem => item.Avaliacao)</p>
						</td>
						<td>
							<p>@Html.DisplayFor(modelItem => item.DataCriacao)</p>
						</td>
						<td>
							@if (item.Status == "Nova") {
								<span class="badge bg-warning text-dark">@Html.DisplayFor(modelItem => item.Status)</span>
							} else if (item.Status == "Reprovada") {
								<span class="badge bg-danger">@Html.DisplayFor(modelItem => item.Status)</span>
							} else {
								<span class="badge bg-success">@Html.DisplayFor(modelItem => item.Status)</span>
							}
						</td>
						<td>
							@if (item.StatusNotCliente == true) {
								<p>Sim</p>
							} else {
								<p>Não</p>
							}
						</td>
						<td class="text-end">
							<div class="d-flex gap-2 justify-content-end">
								<a asp-action="Edit" asp-route-id="@item.ReviewId" class="btn btn-primary">Moderar </a>
								<a asp-action="Delete" asp-route-id="@item.ReviewId" class="btn btn-primary">Excluir</a>
							</div>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>

	<div class="mt-5 mb-6 d-flex justify-content-between">
		<div class="total-navi">
			Total de Avaliações: @Model.TotalRecordCount
		</div>

		<div>
			@await Component.InvokeAsync("Pager", new { PagingList = Model, LinkTo = "Index" })
		</div>
	</div>

</div>